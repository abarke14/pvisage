#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ A\ Room\ can\r\n\ have\ exits.\ For\ each\ exit\ a\ reference\ to\ the\ neighboring\ room\ is\r\n\ stored.\ Also,\ an\ arbitrary\ number\ of\ items\ and\ characters\ can\ be\ \r\n\ found\ in\ a\ Room.\r\n\ \r\n\ @author\ Anthony\ Barker\r\n\ @version\ 11.20.2020\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Room\r\n
comment10.params=
comment10.target=Item\ getKey()
comment10.text=\r\n\ @return\ the\ key\ required\ to\ open\ the\ room's\ door\ or\r\n\ null\ if\ no\ key\ is\ needed.\r\n
comment11.params=
comment11.target=java.lang.String\ getDescription()
comment11.text=\r\n\ @return\ the\ description\ of\ the\ room.\r\n
comment12.params=
comment12.target=java.lang.String\ getLongDescription()
comment12.text=\r\n\ @return\ the\ descriptions\ of\ the\ room\ along\ with\ its\ exits,\r\n\ items\ and\ characters\ that\ are\ inside\ the\ room.\r\n
comment13.params=direction
comment13.target=Room\ getExit(java.lang.String)
comment13.text=\r\n\ Get\ the\ room\ that\ an\ exit\ leads\ to.\r\n\ @param\ direction\ The\ direction\ we\ want\ to\ move\ to.\r\n\ @return\ The\ room\ found\ at\ this\ direction\ or\ null\ if\ the\r\n\ direction\ is\ invalid.\r\n
comment14.params=
comment14.target=java.lang.String\ getExitString()
comment14.text=\r\n\ Return\ a\ description\ of\ the\ room's\ exits,\ \r\n\ for\ example\ "Exits\:\ north\ west".\r\n\ @return\ A\ description\ of\ the\ room's\ available\ exits.\r\n
comment15.params=
comment15.target=java.lang.String\ getItemString()
comment15.text=\r\n\ @return\ a\ list\ of\ all\ items\ found\ in\ the\ room\ as\ a\ String.\r\n
comment16.params=
comment16.target=java.lang.String\ getCharacterString()
comment16.text=\r\n\ @return\ a\ list\ of\ all\ characters\ found\ in\ the\ room\ as\ a\ String.\r\n\ If\ nobody\ is\ in\ the\ room\ return\ an\ appropriate\ message.\r\n
comment2.params=north\ east\ south\ west
comment2.target=void\ setExits(Room,\ Room,\ Room,\ Room)
comment2.text=\r\n\ Define\ the\ exits\ of\ this\ room.\ Every\ direction\ leads\ to\r\n\ another\ room\ or\ is\ null.\r\n
comment3.params=direction\ neighbor
comment3.target=void\ setExit(java.lang.String,\ Room)
comment3.text=\r\n\ Define\ an\ exit\ from\ this\ room.\ \r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ The\ room\ in\ the\ given\ direction.\r\n
comment4.params=item
comment4.target=void\ addItem(Item)
comment4.text=\r\n\ Place\ an\ item\ into\ this\ room.\r\n
comment5.params=item
comment5.target=void\ removeItem(Item)
comment5.text=\r\n\ Remove\ an\ item\ from\ the\ room.\r\n
comment6.params=name
comment6.target=Item\ getItem(java.lang.String)
comment6.text=\r\n\ @return\ the\ item\ with\ the\ given\ name.\ If\ no\ item\ with\ \r\n\ this\ name\ exists\ return\ null.\r\n\ @param\ name\ The\ name\ of\ the\ item\ to\ return.\r\n
comment7.params=character
comment7.target=void\ addCharacter(Character)
comment7.text=\r\n\ Place\ a\ character\ in\ the\ room.\r\n
comment8.params=name
comment8.target=Character\ getCharacter(java.lang.String)
comment8.text=\r\n\ @return\ the\ character\ with\ the\ given\ name.\ If\ no\ character\ \r\n\ with\ this\ name\ exists\ return\ null.\r\n\ @param\ name\ The\ name\ of\ the\ character\ to\ return.\r\n
comment9.params=key
comment9.target=boolean\ open(Item)
comment9.text=\r\n\ Try\ to\ open\ the\ room's\ door.\r\n\ @param\ key\ The\ key\ to\ open\ the\ door\ with.\ Ignored.\r\n\ @return\ true.\ \r\n
numComments=17
